// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  transactions Transaction[]
  budgets      Budget[]
  categories   Category[]
  settings     UserSettings?

  @@map("users")
}

model Category {
  id     String      @id @default(uuid())
  name   String
  type   CategoryType
  userId String
  user   User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Relations
  transactions Transaction[]
  budgets      Budget[]

  @@unique([name, type, userId])
  @@map("categories")
}

model Transaction {
  id          String          @id @default(uuid())
  type        TransactionType
  amount      Float
  description String?
  date        DateTime
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  // Foreign keys
  userId     String
  categoryId String

  // Relations
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Budget {
  id        String   @id @default(uuid())
  limit     Float
  spent     Float    @default(0)
  month     Int
  year      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Foreign keys
  userId     String
  categoryId String

  // Relations
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([userId, categoryId, month, year])
  @@map("budgets")
}

model UserSettings {
  id            String  @id @default(uuid())
  theme         String  @default("system")
  notifications Boolean @default(true)
  autoSave      Boolean @default(true)

  // Foreign key
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_settings")
}

enum CategoryType {
  INCOME
  EXPENSE
}

enum TransactionType {
  INCOME
  EXPENSE
}
